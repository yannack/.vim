# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# redoing the bindings so the current path is maintained when splitting
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
# extra binding for new session
bind-key n new-session -c "#{pane_current_path}"

set -g history-limit 10000
# start session/window numbers at 0
set -g base-index 0
# start pane numbers at 1 to match keyboard order with tmux pane order
set-window-option -g pane-base-index 1

# Remap window navigation to vim (not really needed, but sometimes, vi gets
# stuck, this gives us a direct override)
bind-key j select-pane -D 
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

# replace default terminal's C-k with C-b/C-k
bind-key C-k send-keys C-k

# set tmux to use vi-mode, makes copy/paste easier
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'C-v' rectangle-toggle
bind-key -t vi-copy 'y' copy-selection
bind y run-shell "tmux show-buffer | xsel -i -b" \; display-message "Copied tmux buffer to system clipboard"

# Set the title bar
set -g set-titles on
# pre-tmux2.0, now #() no longer works in title
# set -g set-titles-string ':: #(whoami)@#h :: #S'
set -g set-titles-string ':: #S @#h ::'

# Set status bar
set -g status-utf8 on
set -g status-bg black
set -g status-fg white
set -g status-interval 5 
set -g status-left-length 90
set -g status-right-length 60
set -g status-left "#[fg=Green]#(whoami)#[fg=white]@#[fg=blue]#(hostname -s)#[fg=white]::#[fg=yellow]#(curl ipecho.net/plain;echo)"
set -g status-justify left
set -g status-right '#[fg=Green]#(env | grep wemux -q && wemux status_users) #[fg=Cyan]#S #[fg=white]%a %d %b %R'

# The next is to prevent Ctrl-D from acting directly, but it's a pain.
# set-environment -g 'IGNOREEOF' 1
